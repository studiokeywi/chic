{
  "version": 3,
  "sources": ["../../lib/plugins/labelMaker.ts"],
  "sourcesContent": ["import { Chic, ChicLogger, ChicLoggers } from '../index.js';\r\nimport { ChicPlugin } from './index.js';\r\n\r\nconst install = (chic: Chic) => {\r\n  const base = chic.border.solid_0_125rem.borderRadius._0_5rem.fontSize._1rem.margin._0_25rem.padding._0_5rem.fix();\r\n  const defaults = {\r\n    debug: { label: 'DEBUG', style: base.borderColor.cyan.color.cyan() },\r\n    error: { label: 'ERROR', style: base.borderColor.red.color.red() },\r\n    group: { label: 'GROUP', style: base.borderColor.initial() },\r\n    groupCollapsed: { label: 'GROUP', style: base.borderColor.initial() },\r\n    info: { label: 'INFO', style: base.borderColor.green.color.green() },\r\n    log: { label: 'LOG', style: base.borderColor.green.color.green() },\r\n    warn: { label: 'WARN', style: base.borderColor.yellow.color.yellow() },\r\n  };\r\n  const make =\r\n    (mode: keyof ChicLoggers, { label, style }: LabelConfig): ChicLogger =>\r\n    (strs, ...styles) =>\r\n      chic[mode]([label, ...strs], ...[style, ...styles]);\r\n\r\n  // TODO: documentation\r\n  // TODO: figure out how to apply intellisense from here to actual object, if possible\r\n  return (config: LabelMakerConfig = {}): ChicLoggers => {\r\n    const debug = make('debug', config.debug ?? defaults.debug);\r\n    const error = make('error', config.error ?? defaults.error);\r\n    const group = make('group', config.group ?? defaults.group);\r\n    const groupCollapsed = make('groupCollapsed', config.groupCollapsed ?? defaults.groupCollapsed);\r\n    const info = make('info', config.info ?? defaults.info);\r\n    const log = make('log', config.log ?? defaults.log);\r\n    const warn = make('warn', config.warn ?? defaults.warn);\r\n    return { debug, error, group, groupCollapsed, groupEnd: chic.groupEnd.bind(chic), info, log, warn };\r\n  };\r\n};\r\n// TODO: documentation\r\nexport default { id: 'labelMaker', install } as ChicPlugin;\r\n\r\n// TODO: documentation\r\nexport type LabelConfig = {\r\n  label: string;\r\n  style: string;\r\n};\r\nexport type LabelMakerConfig = {\r\n  debug?: LabelConfig;\r\n  error?: LabelConfig;\r\n  group?: LabelConfig;\r\n  groupCollapsed?: LabelConfig;\r\n  info?: LabelConfig;\r\n  log?: LabelConfig;\r\n  warn?: LabelConfig;\r\n};\r\n"],
  "mappings": "AAGA,MAAM,UAAU,CAAC,SAAe;AAC9B,QAAM,OAAO,KAAK,OAAO,eAAe,aAAa,QAAQ,SAAS,MAAM,OAAO,SAAS,QAAQ,QAAQ,IAAI;AAChH,QAAM,WAAW;AAAA,IACf,OAAO,EAAE,OAAO,SAAS,OAAO,KAAK,YAAY,KAAK,MAAM,KAAK,EAAE;AAAA,IACnE,OAAO,EAAE,OAAO,SAAS,OAAO,KAAK,YAAY,IAAI,MAAM,IAAI,EAAE;AAAA,IACjE,OAAO,EAAE,OAAO,SAAS,OAAO,KAAK,YAAY,QAAQ,EAAE;AAAA,IAC3D,gBAAgB,EAAE,OAAO,SAAS,OAAO,KAAK,YAAY,QAAQ,EAAE;AAAA,IACpE,MAAM,EAAE,OAAO,QAAQ,OAAO,KAAK,YAAY,MAAM,MAAM,MAAM,EAAE;AAAA,IACnE,KAAK,EAAE,OAAO,OAAO,OAAO,KAAK,YAAY,MAAM,MAAM,MAAM,EAAE;AAAA,IACjE,MAAM,EAAE,OAAO,QAAQ,OAAO,KAAK,YAAY,OAAO,MAAM,OAAO,EAAE;AAAA,EACvE;AACA,QAAM,OACJ,CAAC,MAAyB,EAAE,OAAO,MAAM,MACzC,CAAC,SAAS,WACR,KAAK,IAAI,EAAE,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC;AAItD,SAAO,CAAC,SAA2B,CAAC,MAAmB;AACrD,UAAM,QAAQ,KAAK,SAAS,OAAO,SAAS,SAAS,KAAK;AAC1D,UAAM,QAAQ,KAAK,SAAS,OAAO,SAAS,SAAS,KAAK;AAC1D,UAAM,QAAQ,KAAK,SAAS,OAAO,SAAS,SAAS,KAAK;AAC1D,UAAM,iBAAiB,KAAK,kBAAkB,OAAO,kBAAkB,SAAS,cAAc;AAC9F,UAAM,OAAO,KAAK,QAAQ,OAAO,QAAQ,SAAS,IAAI;AACtD,UAAM,MAAM,KAAK,OAAO,OAAO,OAAO,SAAS,GAAG;AAClD,UAAM,OAAO,KAAK,QAAQ,OAAO,QAAQ,SAAS,IAAI;AACtD,WAAO,EAAE,OAAO,OAAO,OAAO,gBAAgB,UAAU,KAAK,SAAS,KAAK,IAAI,GAAG,MAAM,KAAK,KAAK;AAAA,EACpG;AACF;AAEA,IAAO,qBAAQ,EAAE,IAAI,cAAc,QAAQ;",
  "names": []
}
