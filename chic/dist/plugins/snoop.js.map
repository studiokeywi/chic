{
  "version": 3,
  "sources": ["../../lib/plugins/snoop.ts"],
  "sourcesContent": ["import { type Chic, type ChicLoggers } from '../index.js';\r\nimport type { ChicPlugin } from './index.js';\r\n\r\n// TODO: documentation\r\nconst install =\r\n  (chic: Chic): Snoop =>\r\n  ({ check, labels = ['Event Occurred'], level = 'log', repeat = false, styles = [''] }) => {\r\n    const log = () => (chic[level](labels, ...styles), repeat && start());\r\n    const poll = () => (!((ready = check()) instanceof Promise) ? result(ready) : ready.then(result));\r\n    const result = (ready: boolean) => (ready ? log : start)();\r\n    const start = () => void (running && stop(), (running = requestAnimationFrame(poll)));\r\n    const stop = () => void cancelAnimationFrame(running);\r\n    let ready: boolean | Promise<boolean> = false;\r\n    let running: number;\r\n    start();\r\n    return { start, stop, uninstall: stop };\r\n  };\r\n\r\n// TODO: documentation\r\nexport default <ChicPlugin>{ id: 'snoop', install };\r\n\r\n// TODO: documentation\r\nexport interface Snoop {\r\n  (config: SnoopConfig): { start: () => void; stop: () => void };\r\n}\r\n// TODO: documentation\r\nexport type SnoopConfig = {\r\n  check: (...args: any[]) => boolean | Promise<boolean>;\r\n  labels?: string[];\r\n  level?: keyof ChicLoggers;\r\n  repeat?: boolean;\r\n  styles?: string[];\r\n};\r\n"],
  "mappings": "AAIA,MAAM,UACJ,CAAC,SACD,CAAC,EAAE,OAAO,SAAS,CAAC,gBAAgB,GAAG,QAAQ,OAAO,SAAS,OAAO,SAAS,CAAC,EAAE,EAAE,MAAM;AACxF,QAAM,MAAM,OAAO,KAAK,KAAK,EAAE,QAAQ,GAAG,MAAM,GAAG,UAAU,MAAM;AACnE,QAAM,OAAO,MAAO,GAAG,QAAQ,MAAM,cAAc,WAAW,OAAO,KAAK,IAAI,MAAM,KAAK,MAAM;AAC/F,QAAM,SAAS,CAACA,YAAoBA,SAAQ,MAAM,OAAO;AACzD,QAAM,QAAQ,MAAM,MAAM,WAAW,KAAK,GAAI,UAAU,sBAAsB,IAAI;AAClF,QAAM,OAAO,MAAM,KAAK,qBAAqB,OAAO;AACpD,MAAI,QAAoC;AACxC,MAAI;AACJ,QAAM;AACN,SAAO,EAAE,OAAO,MAAM,WAAW,KAAK;AACxC;AAGF,IAAO,gBAAoB,EAAE,IAAI,SAAS,QAAQ;",
  "names": ["ready"]
}
