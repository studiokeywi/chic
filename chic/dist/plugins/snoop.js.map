{
  "version": 3,
  "sources": ["../../lib/plugins/snoop.ts"],
  "sourcesContent": ["import type { Chic, ChicLoggers, ChicPlugin } from 'chic';\r\nimport { ChicPluginFunction } from 'chic';\r\n\r\n/** Installer for the `snoop` plugin. Not intended to be used directly\r\n * @internal\r\n * @param {Chic} chic\r\n * @returns {Snoop} */\r\nconst install: ChicPlugin<Snoop>['install'] = (chic: Chic): Snoop => {\r\n  /** Allows simple messages to be automatically logged when a given condition occurs. The returned `start` and `stop` functions can be used to further control when you are snooping or not.\r\n   *\r\n   * **NOTE:** The `snoop` plugin uses `requestAnimationFrame` internally to prevent execution while the window is not in focus. Do not rely on this for time-sensitive purposes unless you intend to monitor the window during the entire time of its use.\r\n   * @param {SnoopConfig} config\r\n   * @returns { start: () => void; stop: () => void } */\r\n  const snoop = <Snoop>(({\r\n    check,\r\n    labels = ['Event Occurred'],\r\n    level = 'log',\r\n    repeat = false,\r\n    styles = [''],\r\n  }: SnoopConfig) => {\r\n    const log = () => (chic[level](labels, ...styles), repeat && start());\r\n    const poll = () => (!((ready = check()) instanceof Promise) ? result(ready) : ready.then(result));\r\n    const result = (ready: boolean) => (ready ? log : start)();\r\n    const start = () => void (running && stop(), (running = requestAnimationFrame(poll)));\r\n    const stop = () => void cancelAnimationFrame(running);\r\n    let ready: boolean | Promise<boolean> = false;\r\n    let running: number;\r\n    start();\r\n    return { start, stop, uninstall: stop };\r\n  });\r\n  return snoop;\r\n};\r\n\r\n/** Installer object for the `snoop` plugin */\r\nconst snoop: ChicPlugin<Snoop> = { id: 'snoop', install };\r\n\r\nexport { snoop };\r\n\r\n/** Allows simple messages to be automatically logged when a given condition occurs. The returned `start` and `stop` functions can be used to further control when you are snooping or not.\r\n *\r\n * **NOTE:** The `snoop` plugin uses `requestAnimationFrame` internally to prevent execution while the window is not in focus. Do not rely on this for time-sensitive purposes unless you intend to monitor the window during the entire time of its use. */\r\nexport interface Snoop extends ChicPluginFunction {\r\n  /** Allows simple messages to be automatically logged when a given condition occurs. The returned `start` and `stop` functions can be used to further control when you are snooping or not.\r\n   *\r\n   * **NOTE:** The `snoop` plugin uses `requestAnimationFrame` internally to prevent execution while the window is not in focus. Do not rely on this for time-sensitive purposes unless you intend to monitor the window during the entire time of its use.\r\n   * @param {SnoopConfig} config\r\n   * @returns { start: () => void; stop: () => void } */\r\n  (config: SnoopConfig): { start: () => void; stop: () => void };\r\n}\r\n/** Configuration for the `snoop` plugin */\r\nexport type SnoopConfig = {\r\n  check: (...args: any[]) => boolean | Promise<boolean>;\r\n  labels?: string[];\r\n  level?: keyof ChicLoggers;\r\n  repeat?: boolean;\r\n  styles?: string[];\r\n};\r\n\r\ndeclare module 'chic' {\r\n  interface ChicPlugins {\r\n    /** Allows simple messages to be automatically logged when a given condition occurs. The returned `start` and `stop` functions can be used to further control when you are snooping or not.\r\n     *\r\n     * **NOTE:** The `snoop` plugin uses `requestAnimationFrame` internally to prevent execution while the window is not in focus. Do not rely on this for time-sensitive purposes unless you intend to monitor the window during the entire time of its use.\r\n     * @internal */\r\n    snoop: Snoop;\r\n  }\r\n}\r\n"],
  "mappings": "AAOA,MAAM,UAAwC,CAAC,SAAsB;AAMnE,QAAMA,SAAgB,CAAC;AAAA,IACrB;AAAA,IACA,SAAS,CAAC,gBAAgB;AAAA,IAC1B,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS,CAAC,EAAE;AAAA,EACd,MAAmB;AACjB,UAAM,MAAM,OAAO,KAAK,KAAK,EAAE,QAAQ,GAAG,MAAM,GAAG,UAAU,MAAM;AACnE,UAAM,OAAO,MAAO,GAAG,QAAQ,MAAM,cAAc,WAAW,OAAO,KAAK,IAAI,MAAM,KAAK,MAAM;AAC/F,UAAM,SAAS,CAACC,YAAoBA,SAAQ,MAAM,OAAO;AACzD,UAAM,QAAQ,MAAM,MAAM,WAAW,KAAK,GAAI,UAAU,sBAAsB,IAAI;AAClF,UAAM,OAAO,MAAM,KAAK,qBAAqB,OAAO;AACpD,QAAI,QAAoC;AACxC,QAAI;AACJ,UAAM;AACN,WAAO,EAAE,OAAO,MAAM,WAAW,KAAK;AAAA,EACxC;AACA,SAAOD;AACT;AAGA,MAAM,QAA2B,EAAE,IAAI,SAAS,QAAQ;",
  "names": ["snoop", "ready"]
}
